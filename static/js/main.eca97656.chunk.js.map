{"version":3,"sources":["store.ts","comonents/display.tsx","hooks/prop_hooks.ts","comonents/debug.tsx","App.tsx","index.tsx"],"names":["publishClient","subscribeClient","DisplayComponent","useDisableSetter","useState","available","setAvailable","DebugComponent","publishDisable","reversePublishDisable","subscribeDisable","reverseSubscribeDisable","config","clientId","username","password","useEffect","console","log","direction","disabled","type","onClick","event","client","preventDefault","Date","parse","toString","mqtt","connect","on","message","success","err","error","App","colStyle","marginTop","className","span","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAwBWA,EACAC,E,kECZIC,EARU,WACvB,OACE,4C,oDCFSC,EAAmB,WAAqC,IAAD,EAChCC,oBAAS,GADuB,mBAC3DC,EAD2D,KAChDC,EADgD,KAElE,MAAO,CACLD,EACA,WACEC,GAAcD,MCgELE,EAjEQ,WAAO,IAAD,EACqBJ,IADrB,mBACpBK,EADoB,KACJC,EADI,OAEyBN,IAFzB,mBAEpBO,EAFoB,KAEFC,EAFE,KAIrBC,EAA8B,CAClCC,SAAU,GACVC,SAAU,OACVC,SAAU,UAsCZ,OALAC,qBAAU,WACRC,QAAQC,IAAIV,GACZS,QAAQC,IAAIR,MAIZ,kBAAC,IAAD,CAAOS,UAAW,YAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,SAAUZ,EACVa,KAAK,UACLC,QAzCmB,SAACC,GHQM,IAACC,EGPjCD,EAAME,iBACNb,EAAOC,SAAW,iBAAmBa,KAAKC,OAAM,IAAID,MAAOE,YAAYA,WHMtCJ,EGLZK,IAAKC,QAAQ,gCAAiClB,IHMrEZ,EAAgBwB,GGLAO,GAAG,WAAW,WAC1Bd,QAAQC,IAAIlB,GACZgC,IAAQC,QAAQ,mDAChBxB,OAGFT,EAAc+B,GAAG,SAAS,SAACG,GACzBF,IAAQG,MAAM,gFAAsBD,EAAIF,cA2BtC,sCAMA,kBAAC,IAAD,CACEZ,SAAUV,EACVW,KAAK,UACLC,QAhCqB,SAACC,GHHM,IAACC,EGInCD,EAAME,iBACNb,EAAOC,SAAW,mBAAqBa,KAAKC,OAAM,IAAID,MAAOE,YAAYA,WHLtCJ,EGMZK,IAAKC,QAAQ,gCAAiClB,IHLvEX,EAAkBuB,GGMAO,GAAG,WAAW,WAC5Bd,QAAQC,IAAIlB,GACZgC,IAAQC,QAAQ,mDAChBtB,OAGFV,EAAgB8B,GAAG,SAAS,SAACG,GAC3BF,IAAQG,MAAM,gFAAsBD,EAAIF,cAkBtC,yCCzDKI,EAAM,WACjBpB,qBAAU,WACRC,QAAQC,SAGV,IAAMmB,EAA0B,CAC9BC,UAAW,MAGb,OACE,yBAAKC,UAAW,aACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,KAAM,GAAIC,MAAOJ,GACpB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKG,KAAM,GAAIC,MAAOJ,GACpB,kBAAC,EAAD,UCjBVK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.eca97656.chunk.js","sourcesContent":["import mqtt from 'mqtt'\n\n/**\n * 存储的变量\n * 用于数据传递\n * */\nexport type storeData = {\n  soilMoisture: number // 土壤湿度\n  soilTemperature: number // 土壤温度\n  waterLevel: number // 当前水位\n  lowWaterLevel: boolean // 低水位状态\n  pumpStatus: boolean // 水泵是否开启\n  saveTimeStamp: number // 存储时间戳\n  terminalStatus: boolean // 设备通信状态\n  location: string // 地理位置\n  autoOperation: boolean // 是否自动操作\n  tempAlarm: boolean // 是否温度报警\n  waterLevelAlarm: boolean // 是否水位报警\n  exceptionAlarm: boolean // 是否异常报警\n  tempThreshold: number // 温度阈值\n  moistureThreshold: number // 湿度阈值\n  waterLevelThreshold: number // 水位阈值\n}\n\nexport let publishClient: mqtt.Client\nexport let subscribeClient: mqtt.Client\n\nexport const bindingPublishClient = (client: mqtt.Client) => {\n  publishClient = client\n}\n\nexport const bindingSubscribeClient = (client: mqtt.Client) => {\n  subscribeClient = client\n}\n","import React from 'react'\n\n/**\n * 展示栏\n * */\nconst DisplayComponent = () => {\n  return (\n    <>\n            bbb\n    </>\n  )\n}\n\nexport default DisplayComponent\n","import { useState } from 'react'\n\n/**\n * 封装disable属性\n * */\nexport const useDisableSetter = function(): [boolean, (() => void)] {\n  const [available, setAvailable] = useState(false)\n  return [\n    available,\n    () => {\n      setAvailable(!available)\n    }\n  ]\n}\n","import mqtt from 'mqtt'\nimport React, { MouseEvent, useEffect } from 'react'\nimport { Button, message, Space } from 'antd'\nimport { useDisableSetter } from '../hooks/prop_hooks'\nimport { bindingPublishClient, bindingSubscribeClient, publishClient, subscribeClient } from '../store'\n\n/**\n * Debug栏\n * */\nconst DebugComponent = () => {\n  const [publishDisable, reversePublishDisable] = useDisableSetter()\n  const [subscribeDisable, reverseSubscribeDisable] = useDisableSetter()\n\n  const config: mqtt.IClientOptions = {\n    clientId: '',\n    username: 'emqx',\n    password: 'public'\n  }\n\n  const handlePublishClick = (event: MouseEvent) => {\n    event.preventDefault()\n    config.clientId = 'publish client' + Date.parse(new Date().toString()).toString()\n    bindingPublishClient(mqtt.connect('wss://39.105.110.28:8084/mqtt', config))\n    publishClient.on('connect', () => {\n      console.log(publishClient)\n      message.success('发布用mqtt成功连接!')\n      reversePublishDisable()\n    })\n\n    publishClient.on('error', (err: Error) => {\n      message.error('发布用mqtt成功连接失败!原因：' + err.message)\n    })\n  }\n\n  const handleSubscribeClick = (event: MouseEvent) => {\n    event.preventDefault()\n    config.clientId = 'subscribe client' + Date.parse(new Date().toString()).toString()\n    bindingSubscribeClient(mqtt.connect('wss://39.105.110.28:8084/mqtt', config))\n    subscribeClient.on('connect', () => {\n      console.log(publishClient)\n      message.success('订阅用mqtt成功连接!')\n      reverseSubscribeDisable()\n    })\n\n    subscribeClient.on('error', (err: Error) => {\n      message.error('订阅用mqtt成功连接失败!原因：' + err.message)\n    })\n  }\n\n  useEffect(() => {\n    console.log(publishDisable)\n    console.log(subscribeDisable)\n  })\n\n  return (\n    <Space direction={'vertical'}>\n      <Space>\n        <Button\n          disabled={publishDisable}\n          type='primary'\n          onClick={handlePublishClick}>\n                    发布用mqtt连接\n        </Button>\n        <Button\n          disabled={subscribeDisable}\n          type='primary'\n          onClick={handleSubscribeClick}>\n                    订阅用mqtt连接\n        </Button>\n      </Space>\n    </Space>\n  )\n}\n\nexport default DebugComponent\n","import React, { CSSProperties, useEffect } from 'react'\nimport './App.css'\nimport { Col, Row } from 'antd'\nimport DisplayComponent from './comonents/display'\nimport DebugComponent from './comonents/debug'\n\nexport const App = () => {\n  useEffect(() => {\n    console.log()\n  })\n\n  const colStyle: CSSProperties = {\n    marginTop: '2%'\n  }\n\n  return (\n    <div className={'container'}>\n      <Row>\n        <Col span={12} style={colStyle}>\n          <DisplayComponent/>\n        </Col>\n        <Col span={12} style={colStyle}>\n          <DebugComponent/>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}