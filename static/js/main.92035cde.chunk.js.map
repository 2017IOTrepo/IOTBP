{"version":3,"sources":["App.tsx","index.tsx"],"names":["publishClient","subscribeClient","DisplayComponent","useDisableSetter","useState","available","setAvailable","DebugComponent","publishDisable","reversePublishDisable","subscribeDisable","reverseSubscribeDisable","config","clientId","username","password","useEffect","console","log","direction","disabled","type","onClick","event","Date","parse","toString","mqtt","connect","on","message","success","err","error","App","colStyle","marginTop","className","span","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QASIA,EACAC,E,wHAEEC,EAAmB,WACvB,OACE,4CAMEC,EAAmB,WAAqC,IAAD,EACzBC,oBAAS,GADgB,mBACpDC,EADoD,KACzCC,EADyC,KAE3D,MAAO,CACLD,EACA,WACEC,GAAcD,MAKdE,EAAiB,WAAO,IAAD,EACqBJ,IADrB,mBACpBK,EADoB,KACJC,EADI,OAEyBN,IAFzB,mBAEpBO,EAFoB,KAEFC,EAFE,KAIrBC,EAA8B,CAClCC,SAAU,GACVC,SAAU,OACVC,SAAU,UAoCZ,OALAC,qBAAU,WACRC,QAAQC,IAAIV,GACZS,QAAQC,IAAIR,MAIZ,kBAAC,IAAD,CAAOS,UAAW,YAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,SAAUZ,EACVa,KAAK,UACLC,QAvCmB,SAACC,GAC1BX,EAAOC,SAAW,iBAAmBW,KAAKC,OAAM,IAAID,MAAOE,YAAYA,YACvE1B,EAAgB2B,IAAKC,QAAQ,+BAAgChB,IAC/CiB,GAAG,WAAW,WAC1BZ,QAAQC,IAAIlB,GACZ8B,IAAQC,QAAQ,mDAChBtB,OAGFT,EAAc6B,GAAG,SAAS,SAACG,GACzBF,IAAQG,MAAM,gFAAsBD,EAAIF,cA0BtC,sCAMA,kBAAC,IAAD,CACEV,SAAUV,EACVW,KAAK,UACLC,QA/BqB,SAACC,GAC5BX,EAAOC,SAAW,mBAAqBW,KAAKC,OAAM,IAAID,MAAOE,YAAYA,YACzEzB,EAAkB0B,IAAKC,QAAQ,+BAAgChB,IAC/CiB,GAAG,WAAW,WAC5BZ,QAAQC,IAAIlB,GACZ8B,IAAQC,QAAQ,mDAChBpB,OAGFV,EAAgB4B,GAAG,SAAS,SAACG,GAC3BF,IAAQG,MAAM,gFAAsBD,EAAIF,cAkBtC,yCAWKI,EAAM,WACjBlB,qBAAU,WACRC,QAAQC,SAEV,IAAMiB,EAA0B,CAC9BC,UAAW,MAGb,OACE,yBAAKC,UAAW,aACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,KAAM,GAAIC,MAAOJ,GACpB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKG,KAAM,GAAIC,MAAOJ,GACpB,kBAAC,EAAD,UCvGVK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.92035cde.chunk.js","sourcesContent":["import React, { CSSProperties, useEffect, useState, MouseEvent } from 'react'\nimport './App.css'\nimport mqtt from 'mqtt'\nimport { Col, Row, Space, Button, message } from 'antd'\n\ntype storeData = {\n\n}\n\nlet publishClient: mqtt.Client\nlet subscribeClient: mqtt.Client\n\nconst DisplayComponent = () => {\n  return (\n    <>\n        bbb\n    </>\n  )\n}\n\nconst useDisableSetter = function(): [boolean, (() => void)] {\n  const [available, setAvailable] = useState(false)\n  return [\n    available,\n    () => {\n      setAvailable(!available)\n    }\n  ]\n}\n\nconst DebugComponent = () => {\n  const [publishDisable, reversePublishDisable] = useDisableSetter()\n  const [subscribeDisable, reverseSubscribeDisable] = useDisableSetter()\n\n  const config: mqtt.IClientOptions = {\n    clientId: '',\n    username: 'emqx',\n    password: 'public'\n  }\n\n  const handlePublishClick = (event: MouseEvent) => {\n    config.clientId = 'publish client' + Date.parse(new Date().toString()).toString()\n    publishClient = mqtt.connect('ws://39.105.110.28:8083/mqtt', config)\n    publishClient.on('connect', () => {\n      console.log(publishClient)\n      message.success('发布用mqtt成功连接!')\n      reversePublishDisable()\n    })\n\n    publishClient.on('error', (err: Error) => {\n      message.error('发布用mqtt成功连接失败!原因：' + err.message)\n    })\n  }\n\n  const handleSubscribeClick = (event: MouseEvent) => {\n    config.clientId = 'subscribe client' + Date.parse(new Date().toString()).toString()\n    subscribeClient = mqtt.connect('ws://39.105.110.28:8083/mqtt', config)\n    subscribeClient.on('connect', () => {\n      console.log(publishClient)\n      message.success('订阅用mqtt成功连接!')\n      reverseSubscribeDisable()\n    })\n\n    subscribeClient.on('error', (err: Error) => {\n      message.error('订阅用mqtt成功连接失败!原因：' + err.message)\n    })\n  }\n\n  useEffect(() => {\n    console.log(publishDisable)\n    console.log(subscribeDisable)\n  })\n\n  return (\n    <Space direction={'vertical'}>\n      <Space>\n        <Button\n          disabled={publishDisable as boolean}\n          type='primary'\n          onClick={handlePublishClick}>\n            发布用mqtt连接\n        </Button>\n        <Button\n          disabled={subscribeDisable as boolean}\n          type='primary'\n          onClick={handleSubscribeClick}>\n            订阅用mqtt连接\n        </Button>\n      </Space>\n    </Space>\n  )\n}\n\nexport const App = () => {\n  useEffect(() => {\n    console.log()\n  })\n  const colStyle: CSSProperties = {\n    marginTop: '5%'\n  }\n\n  return (\n    <div className={'container'}>\n      <Row>\n        <Col span={12} style={colStyle}>\n          <DisplayComponent/>\n        </Col>\n        <Col span={12} style={colStyle}>\n          <DebugComponent/>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}